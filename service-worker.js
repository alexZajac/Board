"use strict";var precacheConfig=[["/index.html","caddeae24cfd79f382fa960da799bb1c"],["/static/css/main.7b49cdab.css","c42cad58bbcf854270a8d7550b13825f"],["/static/js/main.a7ce7061.js","28c8de9b34bfdb26a1f768ebf36dbdc1"],["/static/media/CircularStd-Black.49611f29.woff","49611f2982d0e8ef61372afe9850535b"],["/static/media/CircularStd-Bold.03e7ee16.woff","03e7ee16210905484b09316e8298d712"],["/static/media/CircularStd-Book.829012af.woff","829012af195c90c00bac2953653768a8"],["/static/media/CircularStd-Medium.381f87a9.woff","381f87a977e09572d69be5e7f6087fe4"],["/static/media/addPeopleColor.1ea25222.png","1ea2522223af27c6e6b0074f71e7ac33"],["/static/media/addbutton.dc7019c9.scss","dc7019c9f9f93c78ec5f70d4be1eded8"],["/static/media/atomic.812cbb9b.scss","812cbb9b0317ea8a7081ff53b22dcc56"],["/static/media/blockquotecaption.803f966f.scss","803f966f7f121017ae3faba813d59c6c"],["/static/media/caption.2cfc1853.scss","2cfc185321e130ff143f5855c0dac3e0"],["/static/media/contributions.1d40d17c.png","1d40d17cf6725bd7e9fc736f8ae750da"],["/static/media/helpTree.fe9029d0.png","fe9029d03b01f1289ad11b294a795720"],["/static/media/image.75761242.scss","75761242c2334bae26ac8561ad02942f"],["/static/media/incognito.bf7e1fb6.png","bf7e1fb697c6bdaea9602566d8dce76b"],["/static/media/index.0c5a04ad.scss","0c5a04ad4882f47a5faabe96b366f63b"],["/static/media/loginimg.d759d329.png","d759d329fd5dd7fdc3f1b999b30b4ef2"],["/static/media/logo-full-greyscale.be701022.png","be701022bb66e9797d431967746277b0"],["/static/media/logo-full-onBlack.984e163d.png","984e163db3804bbcc3e446de23efd360"],["/static/media/logo-full-onWhite.b23ce226.png","b23ce226058113bf11fa35263974f98a"],["/static/media/logo-letter.21bab5d1.png","21bab5d1fb85b34b75a89ef0df56325e"],["/static/media/lotNotes.0097b9f0.png","0097b9f03ce3a074f00b5475b5d68c90"],["/static/media/love.4d489340.png","4d489340d75613e3f344736636a94702"],["/static/media/middleNotes.6ec7013a.png","6ec7013a36e1bc87f625619195a4cd1d"],["/static/media/noLove.47f284e5.png","47f284e52866f2d5ae9b26c937ed0fc7"],["/static/media/react-firebase.2acf57e8.png","2acf57e875a566e39beecd65d9fbc523"],["/static/media/separator.f83f93c7.png","f83f93c7251e5cc1c54ef86fa04e8ef7"],["/static/media/shared.8bd2eaf3.png","8bd2eaf3b1d2eca9b652d0e774ea2741"],["/static/media/text.ce989b2a.scss","ce989b2aac240becc38b7ffd5264e1a3"],["/static/media/todo.03266e3b.scss","03266e3be2d2b4f6ab5b3aeb5b3a3940"],["/static/media/toolbar.fa0e37db.scss","fa0e37db544a8fec12cf896a01235008"],["/static/media/witness.5a25000c.png","5a25000cb2adb0c891153d1a7be40577"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,c),e=urlsToCacheKeys.has(t));var n="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});